---
import Time from "./Time.astro";
import { Markdown } from "astro-remote";
import Avatar from "./Avatar.astro";
import config from "../../../config.json";
import CodeBlock from "./CodeBlock.astro";
import CodeSpan from "./CodeSpan.astro";
import Card from "./Card.astro";
import Note from "./Note.astro";
import Verified from "./Verified.astro";
import type { Post } from "../utils/data";
import Separator from "./Separator.astro";
import { isSinglePost } from "../utils/request";

interface Props extends Post {}
const { verified = false, content, data, name, id } = Astro.props;

let useLink = true;
if (isSinglePost(Astro.request)) {
  useLink = false;
}
const multi = content.split("---").length > 1;
---

<article class:list={{ post: true, multi }} data-post-id={id} id={id}>
  {useLink && <a class="post-link" href={`/p/${id}`} />}
  <Avatar />
  <main>
    <div class="author">
      <span class="name">{config.profile.name}{verified && <Verified />}</span>
      <span class="details">
        <span class="username">@{config.handle}</span>
        <span class="separator"></span>
        <Time value={data.date} />
      </span>
    </div>
    <div class="body">
      <Markdown
        content={content}
        components={{
          CodeBlock,
          CodeSpan,
          Note,
          hr: Separator,
          Card,
          Verified,
        }}
      />
    </div>
  </main>
</article>

<style is:global>
  .post {
    width: 100%;
    display: grid;
    grid-template-columns: 3rem minmax(0, 1fr);
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    position: relative;
    z-index: 0;
  }
  .post-link {
    position: absolute;
    inset: 0;
    outline-offset: -4px;
    z-index: -1;
  }
  .multi::before {
    content: "";
    position: absolute;
    top: 4rem;
    left: 2.5rem;
    bottom: 0;
    width: 1px;
    background: linear-gradient(
      to bottom,
      var(--color-border),
      var(--color-border) calc(100% - 8rem),
      rgb(255 255 255 / 0%)
    );
  }
  main {
    padding-bottom: 2em;
  }
  .body {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    padding-right: 0.25rem;
  }
  .name {
    font-weight: bold;
  }

  .details {
    color: var(--color-muted);
    display: inline-flex;
    align-items: center;
    gap: 0.33rem;
    font-size: 0.9rem;
  }

  .separator {
    display: inline-block;
    width: 0.125rem;
    height: 0.125rem;
    background: currentColor;
  }
</style>
